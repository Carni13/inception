version: '3.8'

networks:
     frontend:
     backend:
     monitor:

volumes:
  wp:
    name: wp
    #driver_opts:
     # type: none
     # device: ${PWD}/volumes/wp
     # o: bind
  db:
    name: db
  promdata:
    name: promdata
  prometc:
    name: prometc
  grafanadata:
    name: granafadata

services:
  nginx:
    container_name: nginx
    build: ./requirements/nginx
    restart: unless-stopped
    ports: 
      - "443:443"
    depends_on:
      - wordpress
    networks:
      - frontend
    volumes:
      - wp:/var/www/html

  mariadb:
    container_name: mariadb
    build: ./requirements/mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    networks:
      - backend
    volumes:
      - db:/var/lib/mysql
    env_file:
      - ./.env
    

  wordpress:
    container_name: wordpress
    build: ./requirements/wordpress
    restart: unless-stopped
    depends_on:
      - mariadb
    ports:
      - "9000:9000"
    networks:
      - backend
      - frontend
    volumes:
      - wp:/var/www/html
    env_file:
      - ./.env
    
  redis:
    container_name: redis
    build: ./bonus/redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - backend
      - frontend
    env_file:
      - ./.env

  adminer:
    container_name: adminer
    build: ./bonus/adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - nginx
    networks:
      - frontend
      - backend
  
  vsftpd:
    container_name: vsftpd
    build: ./bonus/vsftpd
    restart: unless-stopped
    volumes:
      - wp:/home/${FTP_USER}
    ports:
      - "21:21"
      - "21000-21100:21000-21100"
    networks:
     - frontend
     - backend
    env_file:
      - ./.env
    
  prometheus:
    container_name: prometheus
    build: ./bonus/prometheus
    restart: unless-stopped
    volumes:
      - promdata:/prometheus
      - prometc:/etc/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - nodeexporter
    networks:
      - monitor
    env_file:
      - ./.env

  nodeexporter:
    container_name: nodeexporter
    build: ./bonus/node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    ports:
      - "9100:9100"
    networks:
      - monitor

  grafana:
    container_name: grafana
    build: ./bonus/grafana
    volumes:
      - grafanadata:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitor
  
  snake:
    container_name: snake
    build: ./bonus/snake
    ports:
      - "4000:4000"
    networks:
      - frontend
  